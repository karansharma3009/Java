<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" total="12" passed="9">
  <reporter-output>
    <line>
      <![CDATA[STARTED THE TEST ]]>
    </line>
    <line>
      <![CDATA[Starting Test ]]>
    </line>
    <line>
      <![CDATA[FAILED ]]>
    </line>
    <line>
      <![CDATA[1569955171204]]>
    </line>
    <line>
      <![CDATA[ListenerExample]]>
    </line>
    <line>
      <![CDATA[Starting Test ]]>
    </line>
    <line>
      <![CDATA[Test SUCESSFULL]]>
    </line>
    <line>
      <![CDATA[Starting Test ]]>
    </line>
    <line>
      <![CDATA[Test SUCESSFULL]]>
    </line>
    <line>
      <![CDATA[Starting Test ]]>
    </line>
    <line>
      <![CDATA[Test SUCESSFULL]]>
    </line>
    <line>
      <![CDATA[Starting Test ]]>
    </line>
    <line>
      <![CDATA[FAILED ]]>
    </line>
    <line>
      <![CDATA[1569955172394]]>
    </line>
    <line>
      <![CDATA[ListenerExample]]>
    </line>
    <line>
      <![CDATA[Starting Test ]]>
    </line>
    <line>
      <![CDATA[Test SUCESSFULL]]>
    </line>
    <line>
      <![CDATA[Starting Test ]]>
    </line>
    <line>
      <![CDATA[Test SUCESSFULL]]>
    </line>
    <line>
      <![CDATA[Starting Test ]]>
    </line>
    <line>
      <![CDATA[Test SUCESSFULL]]>
    </line>
    <line>
      <![CDATA[Starting Test ]]>
    </line>
    <line>
      <![CDATA[FAILED ]]>
    </line>
    <line>
      <![CDATA[1569955172435]]>
    </line>
    <line>
      <![CDATA[ListenerExample]]>
    </line>
    <line>
      <![CDATA[Starting Test ]]>
    </line>
    <line>
      <![CDATA[Test SUCESSFULL]]>
    </line>
    <line>
      <![CDATA[Starting Test ]]>
    </line>
    <line>
      <![CDATA[Test SUCESSFULL]]>
    </line>
    <line>
      <![CDATA[Starting Test ]]>
    </line>
    <line>
      <![CDATA[Test SUCESSFULL]]>
    </line>
  </reporter-output>
  <suite name="TestFactory" duration-ms="1296" started-at="2019-10-01T18:39:31Z" finished-at="2019-10-01T18:39:32Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="1296" started-at="2019-10-01T18:39:31Z" finished-at="2019-10-01T18:39:32Z">
      <class name="ListenerExample">
        <test-method status="FAIL" signature="FailedTest()[pri:0, instance:ListenerExample@1936f0f5]" name="FailedTest" duration-ms="18" started-at="2019-10-02T00:09:31Z" finished-at="2019-10-02T00:09:31Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at ListenerExample.FailedTest(ListenerExample.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:110)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[FAILED ]]>
            </line>
            <line>
              <![CDATA[1569955171204]]>
            </line>
            <line>
              <![CDATA[ListenerExample]]>
            </line>
          </reporter-output>
        </test-method> <!-- FailedTest -->
        <test-method status="PASS" signature="passedTEst()[pri:0, instance:ListenerExample@1936f0f5]" name="passedTEst" duration-ms="0" started-at="2019-10-02T00:09:31Z" finished-at="2019-10-02T00:09:31Z">
          <reporter-output>
            <line>
              <![CDATA[Test SUCESSFULL]]>
            </line>
          </reporter-output>
        </test-method> <!-- passedTEst -->
        <test-method status="PASS" signature="passedTEst2()[pri:0, instance:ListenerExample@1936f0f5]" name="passedTEst2" duration-ms="0" started-at="2019-10-02T00:09:31Z" finished-at="2019-10-02T00:09:31Z">
          <reporter-output>
            <line>
              <![CDATA[Test SUCESSFULL]]>
            </line>
          </reporter-output>
        </test-method> <!-- passedTEst2 -->
        <test-method status="PASS" signature="readExcel()[pri:0, instance:ListenerExample@1936f0f5]" name="readExcel" duration-ms="1180" started-at="2019-10-02T00:09:31Z" finished-at="2019-10-02T00:09:32Z">
          <reporter-output>
            <line>
              <![CDATA[Test SUCESSFULL]]>
            </line>
          </reporter-output>
        </test-method> <!-- readExcel -->
        <test-method status="FAIL" signature="FailedTest()[pri:0, instance:ListenerExample@6615435c]" name="FailedTest" duration-ms="0" started-at="2019-10-02T00:09:32Z" finished-at="2019-10-02T00:09:32Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at ListenerExample.FailedTest(ListenerExample.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:110)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[FAILED ]]>
            </line>
            <line>
              <![CDATA[1569955172394]]>
            </line>
            <line>
              <![CDATA[ListenerExample]]>
            </line>
          </reporter-output>
        </test-method> <!-- FailedTest -->
        <test-method status="PASS" signature="passedTEst()[pri:0, instance:ListenerExample@6615435c]" name="passedTEst" duration-ms="0" started-at="2019-10-02T00:09:32Z" finished-at="2019-10-02T00:09:32Z">
          <reporter-output>
            <line>
              <![CDATA[Test SUCESSFULL]]>
            </line>
          </reporter-output>
        </test-method> <!-- passedTEst -->
        <test-method status="PASS" signature="passedTEst2()[pri:0, instance:ListenerExample@6615435c]" name="passedTEst2" duration-ms="1" started-at="2019-10-02T00:09:32Z" finished-at="2019-10-02T00:09:32Z">
          <reporter-output>
            <line>
              <![CDATA[Test SUCESSFULL]]>
            </line>
          </reporter-output>
        </test-method> <!-- passedTEst2 -->
        <test-method status="PASS" signature="readExcel()[pri:0, instance:ListenerExample@6615435c]" name="readExcel" duration-ms="36" started-at="2019-10-02T00:09:32Z" finished-at="2019-10-02T00:09:32Z">
          <reporter-output>
            <line>
              <![CDATA[Test SUCESSFULL]]>
            </line>
          </reporter-output>
        </test-method> <!-- readExcel -->
        <test-method status="FAIL" signature="FailedTest()[pri:0, instance:ListenerExample@6b143ee9]" name="FailedTest" duration-ms="0" started-at="2019-10-02T00:09:32Z" finished-at="2019-10-02T00:09:32Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:288)
	at org.testng.Assert.assertEquals(Assert.java:298)
	at ListenerExample.FailedTest(ListenerExample.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:110)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[FAILED ]]>
            </line>
            <line>
              <![CDATA[1569955172435]]>
            </line>
            <line>
              <![CDATA[ListenerExample]]>
            </line>
          </reporter-output>
        </test-method> <!-- FailedTest -->
        <test-method status="PASS" signature="passedTEst()[pri:0, instance:ListenerExample@6b143ee9]" name="passedTEst" duration-ms="0" started-at="2019-10-02T00:09:32Z" finished-at="2019-10-02T00:09:32Z">
          <reporter-output>
            <line>
              <![CDATA[Test SUCESSFULL]]>
            </line>
          </reporter-output>
        </test-method> <!-- passedTEst -->
        <test-method status="PASS" signature="passedTEst2()[pri:0, instance:ListenerExample@6b143ee9]" name="passedTEst2" duration-ms="0" started-at="2019-10-02T00:09:32Z" finished-at="2019-10-02T00:09:32Z">
          <reporter-output>
            <line>
              <![CDATA[Test SUCESSFULL]]>
            </line>
          </reporter-output>
        </test-method> <!-- passedTEst2 -->
        <test-method status="PASS" signature="readExcel()[pri:0, instance:ListenerExample@6b143ee9]" name="readExcel" duration-ms="34" started-at="2019-10-02T00:09:32Z" finished-at="2019-10-02T00:09:32Z">
          <reporter-output>
            <line>
              <![CDATA[Test SUCESSFULL]]>
            </line>
          </reporter-output>
        </test-method> <!-- readExcel -->
      </class> <!-- ListenerExample -->
    </test> <!-- Command line test -->
  </suite> <!-- TestFactory -->
</testng-results>
